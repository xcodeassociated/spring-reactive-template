import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.8.0'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.0'
	id 'groovy'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id "org.jetbrains.kotlin.kapt" version "1.8.0"
	id "com.google.osdetector" version "1.7.2"
}

group = 'com.softeno'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

ext {
	set('springCloudVersion', "2022.0.1")
	set('testcontainersVersion', "1.17.6")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring project dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactive'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// testcontainers
	testImplementation 'org.testcontainers:spock'
	testImplementation 'org.testcontainers:mongodb'

	// spock
	testImplementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.14', ext: 'pom'
	testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.4-M1-groovy-4.0'
	testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.4-M1-groovy-4.0'

	// guerydsl
	implementation ('com.querydsl:querydsl-mongodb:5.0.0') {
		exclude group: 'org.mongodb', module: 'mongo-java-driver'
	}
	kapt group: 'com.querydsl', name: 'querydsl-apt', version: '5.0.0'

	// rsocket
	implementation 'org.springframework.boot:spring-boot-starter-rsocket'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'io.projectreactor.kafka:reactor-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// circuit breaker
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'

	// macOs ARM only
	if (osdetector.classifier == "osx-aarch_64") {
		runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.87.Final:${osdetector.classifier}")
	}

	// s3
	implementation 'io.minio:minio:8.5.1'

	// monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// elk
	implementation 'net.logstash.logback:logstash-logback-encoder:7.2'

	// springdoc
	implementation 'org.springdoc:springdoc-openapi-starter-common:2.0.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.0.2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

kapt {
	annotationProcessor("org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor")
}