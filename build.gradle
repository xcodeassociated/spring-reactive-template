import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jetbrains.kotlin.jvm' version '2.0.20'
	id 'org.jetbrains.kotlin.plugin.spring' version '2.0.20'
	id 'org.jetbrains.kotlin.kapt' version '2.0.20'
	id 'com.google.osdetector' version '1.7.3'
	id 'groovy'
	id 'application'
}

group = 'com.softeno'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

ext {
	set('springCloudVersion', '2023.0.3')
	set('testcontainersVersion', '1.20.1')
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring project dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactive'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-slf4j'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// testcontainers
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:mongodb'
	testImplementation 'org.testcontainers:junit-jupiter'

	// junit kotlin
	testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test'
	testImplementation 'io.mockk:mockk:1.13.12'
	testImplementation 'com.ninja-squad:springmockk:4.0.2'

	// wiremock
	testImplementation 'org.wiremock:wiremock-standalone:3.9.1'

	// guerydsl
	implementation ('com.querydsl:querydsl-mongodb:5.1.0') {
		exclude group: 'org.mongodb', module: 'mongo-java-driver'
	}
	kapt group: 'com.querydsl', name: 'querydsl-apt', version: '5.1.0'

	// rsocket
	implementation 'org.springframework.boot:spring-boot-starter-rsocket'

	// graphql
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	testImplementation 'org.springframework.graphql:spring-graphql-test'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'io.projectreactor.kafka:reactor-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// circuit breaker
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'

	// macOs ARM only
	if (osdetector.classifier == "osx-aarch_64") {
		runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.113.Final:${osdetector.classifier}")
	}

	// s3
	implementation 'io.minio:minio:8.5.12'

	// monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// elk
	implementation 'net.logstash.logback:logstash-logback-encoder:8.0'

	// springdoc
	implementation 'org.springdoc:springdoc-openapi-starter-common:2.6.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.6.0'

	// zipkin
	implementation 'io.micrometer:micrometer-tracing-bridge-otel'
	implementation 'io.opentelemetry:opentelemetry-exporter-zipkin'
	implementation 'io.zipkin.reporter2:zipkin-sender-urlconnection'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

kapt {
	annotationProcessor("org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor")
}