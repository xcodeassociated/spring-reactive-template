spring.config.import=optional:classpath:config/env.properties
spring.main.allow-bean-definition-overriding=false

server.port=8080
spring.application.name=SoftenoReactiveMongoApp

spring.data.mongodb.host=${MONGO_HOST}
spring.data.mongodb.port=${MONGO_PORT}
spring.data.mongodb.username=${MONGO_USER}
spring.data.mongodb.password=${MONGO_PASSWORD}
spring.data.mongodb.database=${MONGO_DB}
spring.data.mongodb.auto-index-creation=true

spring.rsocket.server.mapping-path=/rsocket
spring.rsocket.server.transport=websocket
spring.rsocket.server.port=8081

spring.kafka.bootstrap-servers=${KAFKA_URL}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=${KAFKA_GROUP}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.fasterxml.jackson.databind.JsonNode

com.softeno.kafka.tx=${KAFKA_TOPIC_TX}
com.softeno.kafka.rx=${KAFKA_TOPIC_RX}
com.softeno.kafka.keycloak=${KAFKA_KEYCLOAK}

#com.softeno.external.url=http://localhost:8080/sample
#com.softeno.external.url=http://localhost:8080/sample-secured
com.softeno.external.url=${EXTERNAL_URL}
com.softeno.external.name=${EXTERNAL_NAME}
com.softeno.external.graphql-url=${EXTERNAL_GRAPH_QL}

resilience4j.circuitbreaker.instances.customer-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.customer-service.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.customer-service.slidingWindowType=TIME_BASED
resilience4j.circuitbreaker.instances.customer-service.slidingWindowSize=10
resilience4j.circuitbreaker.instances.customer-service.waitDurationInOpenState=50s
resilience4j.circuitbreaker.instances.customer-service.permittedNumberOfCallsInHalfOpenState=3

spring.security.oauth2.resourceserver.jwt.issuer-uri=${OAUTH_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${OAUTH_JWK_SET_URI}
spring.security.oauth2.client.registration.keycloak.client-id=${OAUTH_CLIENT_ID}
spring.security.oauth2.client.registration.keycloak.client-secret=${OAUTH_CLIENT_SECRET}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=${OAUTH_GRANT_TYPE}
spring.security.oauth2.client.provider.keycloak.authorization-uri=${OAUTH_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.keycloak.token-uri=${OAUTH_TOKEN_URI}
spring.security.oauth2.client.provider.keycloak.user-info-uri=${OAUTH_USER_INFO_URI}
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${OAUTH_JWK_SET_URI}

management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

io.min.name=${IO_MIN_NAME}
io.min.secret=${IO_MIN_PASSWORD}
io.min.url=${IO_MIN_URL}
io.min.bucket=${IO_MIN_BUCKET}
io.min.folder=${IO_MIN_FOLDER}

### grphql
spring.graphql.path=/graphql
spring.graphql.graphiql.enabled=true
spring.graphql.graphiql.path=/graphiql
spring.graphql.cors.allowed-origins=*
spring.graphql.cors.allowed-headers=*
spring.graphql.cors.allowed-methods=*

## observation & zipkin
management.tracing.enabled=true
management.zipkin.tracing.endpoint=${ZIPKIN_URL}
management.tracing.sampling.probability=1.0
management.tracing.propagation.consume=b3
management.tracing.propagation.produce=b3
management.tracing.propagation.type=b3

spring.kafka.template.observation-enabled=true
spring.kafka.listener.observation-enabled=true
management.tracing.baggage.correlation.enabled=true
management.tracing.baggage.enabled=true
management.tracing.baggage.correlation.fields=spanId,traceId

management.otlp.metrics.export.enabled=true
